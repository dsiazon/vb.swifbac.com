#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace vb.swifbac.com.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="swifbacdb")]
	public partial class swifbacdbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertLeague(League instance);
    partial void UpdateLeague(League instance);
    partial void DeleteLeague(League instance);
    partial void InsertDivision(Division instance);
    partial void UpdateDivision(Division instance);
    partial void DeleteDivision(Division instance);
    partial void InsertCourt(Court instance);
    partial void UpdateCourt(Court instance);
    partial void DeleteCourt(Court instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    #endregion
		
		public swifbacdbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["swifbacdbConnectionString2"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public swifbacdbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public swifbacdbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public swifbacdbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public swifbacdbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<League> Leagues
		{
			get
			{
				return this.GetTable<League>();
			}
		}
		
		public System.Data.Linq.Table<Division> Divisions
		{
			get
			{
				return this.GetTable<Division>();
			}
		}
		
		public System.Data.Linq.Table<Court> Courts
		{
			get
			{
				return this.GetTable<Court>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<Registration> Registrations
		{
			get
			{
				return this.GetTable<Registration>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetTeamStandings")]
		public ISingleResult<GetTeamStandingsResult> GetTeamStandings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeagueId", DbType="Int")] System.Nullable<int> leagueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DivisionId", DbType="Int")] System.Nullable<int> divisionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leagueId, divisionId);
			return ((ISingleResult<GetTeamStandingsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllTeamsByDivisionId")]
		public ISingleResult<GetAllTeamsByDivisionIdResult> GetAllTeamsByDivisionId([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeagueId", DbType="Int")] System.Nullable<int> leagueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DivisionId", DbType="Int")] System.Nullable<int> divisionId)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leagueId, divisionId);
			return ((ISingleResult<GetAllTeamsByDivisionIdResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateGame")]
		public int UpdateGame([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeagueId", DbType="Int")] System.Nullable<int> leagueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="GameID", DbType="Int")] System.Nullable<int> gameID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="HomeScore", DbType="Int")] System.Nullable<int> homeScore, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="VisitorScore", DbType="Int")] System.Nullable<int> visitorScore, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsFinal", DbType="Bit")] System.Nullable<bool> isFinal)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leagueId, gameID, homeScore, visitorScore, isFinal);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UpdateStandings")]
		public int UpdateStandings([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeagueID", DbType="Int")] System.Nullable<int> leagueID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leagueID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetGameSchedules")]
		public ISingleResult<GetGameSchedulesResult> GetGameSchedules([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LeagueId", DbType="Int")] System.Nullable<int> leagueId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CurrentDate", DbType="DateTime")] System.Nullable<System.DateTime> currentDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), leagueId, currentDate);
			return ((ISingleResult<GetGameSchedulesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllDivisions")]
		public ISingleResult<GetAllDivisionsResult> GetAllDivisions()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllDivisionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAllCourts")]
		public ISingleResult<GetAllCourtsResult> GetAllCourts()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetAllCourtsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SaveRegistration")]
		public int SaveRegistration([global::System.Data.Linq.Mapping.ParameterAttribute(Name="LastName", DbType="VarChar(50)")] string lastName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FirstName", DbType="VarChar(50)")] string firstName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Age", DbType="Int")] System.Nullable<int> age, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Division", DbType="VarChar(50)")] string division, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ContactPhone", DbType="VarChar(50)")] string contactPhone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="EmailAddress", DbType="VarChar(50)")] string emailAddress, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="JerseySize", DbType="VarChar(50)")] string jerseySize, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Comments", DbType="VarChar(1000)")] string comments)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), lastName, firstName, age, division, contactPhone, emailAddress, jerseySize, comments);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Game")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LeagueId;
		
		private System.DateTime _GameDate;
		
		private string _Time;
		
		private System.Nullable<int> _DivisionId;
		
		private System.Nullable<int> _CourtId;
		
		private System.Nullable<int> _HomeTeamId;
		
		private System.Nullable<int> _HomeTeamScore;
		
		private System.Nullable<int> _VisitorTeamId;
		
		private System.Nullable<int> _VisitorTeamScore;
		
		private System.Nullable<bool> _IsFinal;
		
		private System.Nullable<int> _SortOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeagueIdChanging(int value);
    partial void OnLeagueIdChanged();
    partial void OnGameDateChanging(System.DateTime value);
    partial void OnGameDateChanged();
    partial void OnTimeChanging(string value);
    partial void OnTimeChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnCourtIdChanging(System.Nullable<int> value);
    partial void OnCourtIdChanged();
    partial void OnHomeTeamIdChanging(System.Nullable<int> value);
    partial void OnHomeTeamIdChanged();
    partial void OnHomeTeamScoreChanging(System.Nullable<int> value);
    partial void OnHomeTeamScoreChanged();
    partial void OnVisitorTeamIdChanging(System.Nullable<int> value);
    partial void OnVisitorTeamIdChanged();
    partial void OnVisitorTeamScoreChanging(System.Nullable<int> value);
    partial void OnVisitorTeamScoreChanged();
    partial void OnIsFinalChanging(System.Nullable<bool> value);
    partial void OnIsFinalChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Game()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="Int NOT NULL")]
		public int LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameDate", DbType="DateTime NOT NULL")]
		public System.DateTime GameDate
		{
			get
			{
				return this._GameDate;
			}
			set
			{
				if ((this._GameDate != value))
				{
					this.OnGameDateChanging(value);
					this.SendPropertyChanging();
					this._GameDate = value;
					this.SendPropertyChanged("GameDate");
					this.OnGameDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtId", DbType="Int")]
		public System.Nullable<int> CourtId
		{
			get
			{
				return this._CourtId;
			}
			set
			{
				if ((this._CourtId != value))
				{
					this.OnCourtIdChanging(value);
					this.SendPropertyChanging();
					this._CourtId = value;
					this.SendPropertyChanged("CourtId");
					this.OnCourtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTeamId", DbType="Int")]
		public System.Nullable<int> HomeTeamId
		{
			get
			{
				return this._HomeTeamId;
			}
			set
			{
				if ((this._HomeTeamId != value))
				{
					this.OnHomeTeamIdChanging(value);
					this.SendPropertyChanging();
					this._HomeTeamId = value;
					this.SendPropertyChanged("HomeTeamId");
					this.OnHomeTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTeamScore", DbType="Int")]
		public System.Nullable<int> HomeTeamScore
		{
			get
			{
				return this._HomeTeamScore;
			}
			set
			{
				if ((this._HomeTeamScore != value))
				{
					this.OnHomeTeamScoreChanging(value);
					this.SendPropertyChanging();
					this._HomeTeamScore = value;
					this.SendPropertyChanged("HomeTeamScore");
					this.OnHomeTeamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTeamId", DbType="Int")]
		public System.Nullable<int> VisitorTeamId
		{
			get
			{
				return this._VisitorTeamId;
			}
			set
			{
				if ((this._VisitorTeamId != value))
				{
					this.OnVisitorTeamIdChanging(value);
					this.SendPropertyChanging();
					this._VisitorTeamId = value;
					this.SendPropertyChanged("VisitorTeamId");
					this.OnVisitorTeamIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTeamScore", DbType="Int")]
		public System.Nullable<int> VisitorTeamScore
		{
			get
			{
				return this._VisitorTeamScore;
			}
			set
			{
				if ((this._VisitorTeamScore != value))
				{
					this.OnVisitorTeamScoreChanging(value);
					this.SendPropertyChanging();
					this._VisitorTeamScore = value;
					this.SendPropertyChanged("VisitorTeamScore");
					this.OnVisitorTeamScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinal", DbType="Bit")]
		public System.Nullable<bool> IsFinal
		{
			get
			{
				return this._IsFinal;
			}
			set
			{
				if ((this._IsFinal != value))
				{
					this.OnIsFinalChanging(value);
					this.SendPropertyChanging();
					this._IsFinal = value;
					this.SendPropertyChanged("IsFinal");
					this.OnIsFinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.League")]
	public partial class League : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public League()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(300)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Division")]
	public partial class Division : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Division()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Court")]
	public partial class Court : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Descriptipn;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptipnChanging(string value);
    partial void OnDescriptipnChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public Court()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriptipn", DbType="VarChar(300)")]
		public string Descriptipn
		{
			get
			{
				return this._Descriptipn;
			}
			set
			{
				if ((this._Descriptipn != value))
				{
					this.OnDescriptipnChanging(value);
					this.SendPropertyChanging();
					this._Descriptipn = value;
					this.SendPropertyChanged("Descriptipn");
					this.OnDescriptipnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Team")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _LeagueId;
		
		private string _Name;
		
		private System.Nullable<int> _Win;
		
		private System.Nullable<int> _Loss;
		
		private System.Nullable<int> _Differential;
		
		private System.Nullable<int> _TotalScore;
		
		private System.Nullable<int> _DivisionId;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _IsTBD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnLeagueIdChanging(int value);
    partial void OnLeagueIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWinChanging(System.Nullable<int> value);
    partial void OnWinChanged();
    partial void OnLossChanging(System.Nullable<int> value);
    partial void OnLossChanged();
    partial void OnDifferentialChanging(System.Nullable<int> value);
    partial void OnDifferentialChanged();
    partial void OnTotalScoreChanging(System.Nullable<int> value);
    partial void OnTotalScoreChanged();
    partial void OnDivisionIdChanging(System.Nullable<int> value);
    partial void OnDivisionIdChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnIsTBDChanging(System.Nullable<bool> value);
    partial void OnIsTBDChanged();
    #endregion
		
		public Team()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="Int NOT NULL")]
		public int LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this.OnLeagueIdChanging(value);
					this.SendPropertyChanging();
					this._LeagueId = value;
					this.SendPropertyChanged("LeagueId");
					this.OnLeagueIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Win", DbType="Int")]
		public System.Nullable<int> Win
		{
			get
			{
				return this._Win;
			}
			set
			{
				if ((this._Win != value))
				{
					this.OnWinChanging(value);
					this.SendPropertyChanging();
					this._Win = value;
					this.SendPropertyChanged("Win");
					this.OnWinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loss", DbType="Int")]
		public System.Nullable<int> Loss
		{
			get
			{
				return this._Loss;
			}
			set
			{
				if ((this._Loss != value))
				{
					this.OnLossChanging(value);
					this.SendPropertyChanging();
					this._Loss = value;
					this.SendPropertyChanged("Loss");
					this.OnLossChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Differential", DbType="Int")]
		public System.Nullable<int> Differential
		{
			get
			{
				return this._Differential;
			}
			set
			{
				if ((this._Differential != value))
				{
					this.OnDifferentialChanging(value);
					this.SendPropertyChanging();
					this._Differential = value;
					this.SendPropertyChanged("Differential");
					this.OnDifferentialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="Int")]
		public System.Nullable<int> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this.OnTotalScoreChanging(value);
					this.SendPropertyChanging();
					this._TotalScore = value;
					this.SendPropertyChanged("TotalScore");
					this.OnTotalScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this.OnDivisionIdChanging(value);
					this.SendPropertyChanging();
					this._DivisionId = value;
					this.SendPropertyChanged("DivisionId");
					this.OnDivisionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTBD", DbType="Bit")]
		public System.Nullable<bool> IsTBD
		{
			get
			{
				return this._IsTBD;
			}
			set
			{
				if ((this._IsTBD != value))
				{
					this.OnIsTBDChanging(value);
					this.SendPropertyChanging();
					this._IsTBD = value;
					this.SendPropertyChanged("IsTBD");
					this.OnIsTBDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Registration")]
	public partial class Registration
	{
		
		private int _Registration1;
		
		private string _LastName;
		
		private string _FirstName;
		
		private System.Nullable<int> _Age;
		
		private string _Division;
		
		private string _ContactPhone;
		
		private string _EmailAddress;
		
		private string _JerseySize;
		
		private System.Nullable<System.DateTime> _InsertDate;
		
		private string _Comments;
		
		public Registration()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Registration", Storage="_Registration1", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Registration1
		{
			get
			{
				return this._Registration1;
			}
			set
			{
				if ((this._Registration1 != value))
				{
					this._Registration1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this._Age = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Division", DbType="VarChar(50)")]
		public string Division
		{
			get
			{
				return this._Division;
			}
			set
			{
				if ((this._Division != value))
				{
					this._Division = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactPhone", DbType="VarChar(50)")]
		public string ContactPhone
		{
			get
			{
				return this._ContactPhone;
			}
			set
			{
				if ((this._ContactPhone != value))
				{
					this._ContactPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailAddress", DbType="VarChar(50)")]
		public string EmailAddress
		{
			get
			{
				return this._EmailAddress;
			}
			set
			{
				if ((this._EmailAddress != value))
				{
					this._EmailAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JerseySize", DbType="VarChar(50)")]
		public string JerseySize
		{
			get
			{
				return this._JerseySize;
			}
			set
			{
				if ((this._JerseySize != value))
				{
					this._JerseySize = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InsertDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> InsertDate
		{
			get
			{
				return this._InsertDate;
			}
			set
			{
				if ((this._InsertDate != value))
				{
					this._InsertDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(1000)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this._Comments = value;
				}
			}
		}
	}
	
	public partial class GetTeamStandingsResult
	{
		
		private int _Id;
		
		private int _LeagueId;
		
		private string _Name;
		
		private System.Nullable<int> _Win;
		
		private System.Nullable<int> _Loss;
		
		private System.Nullable<int> _Diff;
		
		private System.Nullable<int> _TotalScore;
		
		private System.Nullable<int> _DivisionId;
		
		public GetTeamStandingsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="Int NOT NULL")]
		public int LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this._LeagueId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Win", DbType="Int")]
		public System.Nullable<int> Win
		{
			get
			{
				return this._Win;
			}
			set
			{
				if ((this._Win != value))
				{
					this._Win = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loss", DbType="Int")]
		public System.Nullable<int> Loss
		{
			get
			{
				return this._Loss;
			}
			set
			{
				if ((this._Loss != value))
				{
					this._Loss = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diff", DbType="Int")]
		public System.Nullable<int> Diff
		{
			get
			{
				return this._Diff;
			}
			set
			{
				if ((this._Diff != value))
				{
					this._Diff = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalScore", DbType="Int")]
		public System.Nullable<int> TotalScore
		{
			get
			{
				return this._TotalScore;
			}
			set
			{
				if ((this._TotalScore != value))
				{
					this._TotalScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this._DivisionId = value;
				}
			}
		}
	}
	
	public partial class GetAllTeamsByDivisionIdResult
	{
		
		private int _Id;
		
		private string _Name;
		
		public GetAllTeamsByDivisionIdResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetGameSchedulesResult
	{
		
		private int _Id;
		
		private System.Nullable<int> _DivisionId;
		
		private int _LeagueId;
		
		private System.Nullable<int> _CourtId;
		
		private System.Nullable<int> _SortOrder;
		
		private string _GameTime;
		
		private string _DivisionName;
		
		private string _CourtName;
		
		private string _HomeTeamName;
		
		private System.Nullable<int> _HomeTeamId;
		
		private int _HomeTeamScore;
		
		private string _VisitorTeamName;
		
		private System.Nullable<int> _VisitorTeamId;
		
		private int _VisitorTeamScore;
		
		private System.Nullable<bool> _IsFinal;
		
		private string _Comment;
		
		public GetGameSchedulesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionId", DbType="Int")]
		public System.Nullable<int> DivisionId
		{
			get
			{
				return this._DivisionId;
			}
			set
			{
				if ((this._DivisionId != value))
				{
					this._DivisionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeagueId", DbType="Int NOT NULL")]
		public int LeagueId
		{
			get
			{
				return this._LeagueId;
			}
			set
			{
				if ((this._LeagueId != value))
				{
					this._LeagueId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtId", DbType="Int")]
		public System.Nullable<int> CourtId
		{
			get
			{
				return this._CourtId;
			}
			set
			{
				if ((this._CourtId != value))
				{
					this._CourtId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameTime", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string GameTime
		{
			get
			{
				return this._GameTime;
			}
			set
			{
				if ((this._GameTime != value))
				{
					this._GameTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DivisionName", DbType="VarChar(50)")]
		public string DivisionName
		{
			get
			{
				return this._DivisionName;
			}
			set
			{
				if ((this._DivisionName != value))
				{
					this._DivisionName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourtName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string CourtName
		{
			get
			{
				return this._CourtName;
			}
			set
			{
				if ((this._CourtName != value))
				{
					this._CourtName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTeamName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string HomeTeamName
		{
			get
			{
				return this._HomeTeamName;
			}
			set
			{
				if ((this._HomeTeamName != value))
				{
					this._HomeTeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTeamId", DbType="Int")]
		public System.Nullable<int> HomeTeamId
		{
			get
			{
				return this._HomeTeamId;
			}
			set
			{
				if ((this._HomeTeamId != value))
				{
					this._HomeTeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomeTeamScore", DbType="Int NOT NULL")]
		public int HomeTeamScore
		{
			get
			{
				return this._HomeTeamScore;
			}
			set
			{
				if ((this._HomeTeamScore != value))
				{
					this._HomeTeamScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTeamName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string VisitorTeamName
		{
			get
			{
				return this._VisitorTeamName;
			}
			set
			{
				if ((this._VisitorTeamName != value))
				{
					this._VisitorTeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTeamId", DbType="Int")]
		public System.Nullable<int> VisitorTeamId
		{
			get
			{
				return this._VisitorTeamId;
			}
			set
			{
				if ((this._VisitorTeamId != value))
				{
					this._VisitorTeamId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitorTeamScore", DbType="Int NOT NULL")]
		public int VisitorTeamScore
		{
			get
			{
				return this._VisitorTeamScore;
			}
			set
			{
				if ((this._VisitorTeamScore != value))
				{
					this._VisitorTeamScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinal", DbType="Bit")]
		public System.Nullable<bool> IsFinal
		{
			get
			{
				return this._IsFinal;
			}
			set
			{
				if ((this._IsFinal != value))
				{
					this._IsFinal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Comment
		{
			get
			{
				return this._Comment;
			}
			set
			{
				if ((this._Comment != value))
				{
					this._Comment = value;
				}
			}
		}
	}
	
	public partial class GetAllDivisionsResult
	{
		
		private int _Id;
		
		private string _Name;
		
		public GetAllDivisionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
	
	public partial class GetAllCourtsResult
	{
		
		private int _Id;
		
		private string _Name;
		
		public GetAllCourtsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
